// Auto-generated by @oats/gen - DO NOT EDIT
// Generated: 2025-08-17T03:55:10.126Z
// API Version: 1.0.0

export interface Paths {
  '/api/posts/': {
    get: {
      parameters: {
        query?: {
          page?: number;
        };
      };
      responses: {
        200: {
          content: {
            'application/json': Record<string, unknown>;
          };
        };
      };
    };
    post: {
      requestBody: {
        content: {
          'application/json': Record<string, unknown>;
        };
      };
      responses: {
        201: {
          content: {
            'application/json': Record<string, unknown>;
          };
        };
      };
    };
  };
  '/api/posts/{id}/': {
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        200: {
          content: {
            'application/json': Record<string, unknown>;
          };
        };
      };
    };
    put: {
      parameters: {
        path: {
          id: number;
        };
      };
      requestBody: {
        content: {
          'application/json': Record<string, unknown>;
        };
      };
      responses: {
        200: {
          content: {
            'application/json': Record<string, unknown>;
          };
        };
      };
    };
    patch: {
      parameters: {
        path: {
          id: number;
        };
      };
      requestBody: {
        content: {
          'application/json': Record<string, unknown>;
        };
      };
      responses: {
        200: {
          content: {
            'application/json': Record<string, unknown>;
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {};
    };
  };
  '/api/users/': {
    get: {
      parameters: {
        query?: {
          page?: number;
        };
      };
      responses: {
        200: {
          content: {
            'application/json': Record<string, unknown>;
          };
        };
      };
    };
    post: {
      requestBody: {
        content: {
          'application/json': Record<string, unknown>;
        };
      };
      responses: {
        201: {
          content: {
            'application/json': Record<string, unknown>;
          };
        };
      };
    };
  };
  '/api/users/{id}/': {
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        200: {
          content: {
            'application/json': Record<string, unknown>;
          };
        };
      };
    };
    put: {
      parameters: {
        path: {
          id: number;
        };
      };
      requestBody: {
        content: {
          'application/json': Record<string, unknown>;
        };
      };
      responses: {
        200: {
          content: {
            'application/json': Record<string, unknown>;
          };
        };
      };
    };
    patch: {
      parameters: {
        path: {
          id: number;
        };
      };
      requestBody: {
        content: {
          'application/json': Record<string, unknown>;
        };
      };
      responses: {
        200: {
          content: {
            'application/json': Record<string, unknown>;
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {};
    };
  };
  '/api/users/{id}/posts/': {
    get: {
      parameters: {
        path: {
          id: number;
        };
        query?: {
          page?: number;
        };
      };
      responses: {
        200: {
          content: {
            'application/json': Record<string, unknown>;
          };
        };
      };
    };
  };
}

export interface CreatePost {
  title: string;
  content: string;
  author: number;
  published?: boolean;
}

export interface PaginatedPostList {
  count: number;
  next?: string;
  previous?: string;
  results: Record<string, unknown>[];
}

export interface PaginatedUserList {
  count: number;
  next?: string;
  previous?: string;
  results: Record<string, unknown>[];
}

export interface PatchedPost {
  id?: number;
  title?: string;
  content?: string;
  author?: number;
  author_name?: string;
  published?: boolean;
  created_at?: string;
  updated_at?: string;
}

export interface PatchedUser {
  id?: number;
  email?: string;
  first_name?: string;
  last_name?: string;
  is_active?: boolean;
  created_at?: string;
  updated_at?: string;
}

export interface Post {
  id: number;
  title: string;
  content: string;
  author: number;
  author_name: string;
  published?: boolean;
  created_at: string;
  updated_at: string;
}

export interface User {
  id: number;
  email: string;
  first_name: string;
  last_name: string;
  is_active?: boolean;
  created_at: string;
  updated_at: string;
}

// Type helpers
export type ResponseBody<
  P extends keyof Paths,
  M extends keyof Paths[P],
  S extends number = 200,
> = Paths[P][M] extends { responses: Record<S, { content: { 'application/json': infer R } }> }
  ? R
  : never;

export type RequestBody<P extends keyof Paths, M extends keyof Paths[P]> = Paths[P][M] extends {
  requestBody: { content: { 'application/json': infer R } };
}
  ? R
  : never;
